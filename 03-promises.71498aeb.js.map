{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,kBAGZ,MAAMC,EAAYC,SAASC,cAAc,UAEnCC,EAAaF,SAASC,cAAc,kBAEpCE,EAAYH,SAASC,cAAc,iBAEnCG,EAASJ,SAASC,cAAc,mBAkBtC,SAASI,EAAeC,EAAUC,GAflC,IAAuBC,EAAUC,GAAVD,EAgBPF,EAhBiBG,EAgBPF,EAbjB,IAAIG,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KAMRO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEzEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAtB,GAASuB,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU,IAEtEa,SAAQ,KACP,GAAIhB,KAAcF,EAAOmB,MAGvB,OAFA1B,QAAQC,IAAI,mCACZC,EAAUyB,gBAAgB,YAI5BnB,EAAeC,EAAW,EAAGC,IAASJ,EAAUoB,MAAM,G,CAK5DvB,SAASC,cAAc,SAASwB,iBAAiB,UAAWC,IACxDA,EAAEC,iBAEF5B,EAAU6B,aAAa,WAAY,YAGnCvB,EAAe,GAAIH,EAAWqB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('script goemona');\nimport Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('button');\n//console.log(submitBtn);\nconst firstDelay = document.querySelector('[name=\"delay\"]');\n//console.log(firstDelay);\nconst delayStep = document.querySelector('[name=\"step\"]');\n//console.log(delayStep);\nconst amount = document.querySelector('[name=\"amount\"]');\n//console.log(amount);\n\nfunction createPromise(position, delay) {\n  // Return a promise that resolves or rejects after the specified delay\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }     \n    }, delay);\n  });\n}\n\nfunction processPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {           \n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    .finally(() => {\n      if (position === +amount.value) {\n        console.log('All repetitions completed.');\n        submitBtn.removeAttribute('disabled');\n        return;\n      }\n      //Call processPromise func with updated position&delay\n      processPromise(position + 1, delay + +delayStep.value);\n    })\n}\n\n// Add a submit event listener to the form\ndocument.querySelector('.form').addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    \n    submitBtn.setAttribute('disabled', 'disabled');\n\n    //Start process with initial position&delay\n    processPromise(1, +firstDelay.value);\n  });\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","console","log","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$processPromise","position1","delay1","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","finally","value","removeAttribute","addEventListener","e","preventDefault","setAttribute"],"version":3,"file":"03-promises.71498aeb.js.map"}