{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,iBAGZ,IAAMC,EAAYC,SAASC,cAAc,UAEnCC,EAAaF,SAASC,cAAc,kBAEpCE,EAAYH,SAASC,cAAc,iBAEnCG,EAASJ,SAASC,cAAc,mBAkBtC,SAASI,EAAeC,EAAUC,EAAOC,IAfzC,SAAuBF,EAAUC,EAAOC,GAGtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEJ,WAAUC,QAAOC,kBAE3BG,EAAO,CAAEL,WAAUC,QAAOC,iB,GAE3BD,E,KAKLQ,CAAcT,EAAUC,EAAOC,GAC5BQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAaF,EAAbT,cACjBY,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAoBK,OAAdJ,EAAc,M,IAE/EK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARX,SAAUa,EAAaF,EAAbT,cAClBY,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAoBK,OAAdJ,EAAc,M,IAE5EO,SAAQ,WACP,GAAIpB,KAAcF,EAAOuB,MAGvB,OAFA9B,QAAQC,IAAI,mCACZC,EAAU6B,gBAAgB,YAI5BvB,EAAeC,EAAW,EAAGC,GAASJ,EAAUwB,MAAOnB,IAAiBL,EAAUwB,M,IAKxF3B,SAASC,cAAc,SAAS4B,iBAAiB,UAAU,SAACC,GACxDA,EAAEC,iBAEFhC,EAAUiC,aAAa,WAAY,YAGnC3B,EAAe,GAAIH,EAAWyB,OAAQzB,EAAWyB,M","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('script goemon');\nimport Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('button');\n//console.log(submitBtn);\nconst firstDelay = document.querySelector('[name=\"delay\"]');\n//console.log(firstDelay);\nconst delayStep = document.querySelector('[name=\"step\"]');\n//console.log(delayStep);\nconst amount = document.querySelector('[name=\"amount\"]');\n//console.log(amount);\n\nfunction createPromise(position, delay, delayForAlert) {\n  // Return a promise that resolves or rejects after the specified delay\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay, delayForAlert});\n      } else {\n        reject({ position, delay, delayForAlert});\n      }     \n    }, delay);\n  });\n}\n\nfunction processPromise(position, delay, delayForAlert) {\n  createPromise(position, delay, delayForAlert)\n    .then(({ position, delayForAlert}) => {           \n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayForAlert}ms`);\n    })\n    .catch(({ position, delayForAlert}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayForAlert}ms`);\n    })\n    .finally(() => {\n      if (position === +amount.value) {\n        console.log('All repetitions completed.');\n        submitBtn.removeAttribute('disabled');\n        return;\n      }\n      //Call processPromise func with updated position&delay\n      processPromise(position + 1, delay = +delayStep.value, delayForAlert + +delayStep.value);\n    })\n}\n\n// Add a submit event listener to the form\ndocument.querySelector('.form').addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    \n    submitBtn.setAttribute('disabled', 'disabled');\n\n    //Start process with initial position&delay\n    processPromise(1, +firstDelay.value, +firstDelay.value);\n  });\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","console","log","$ce04d3a99e08e73b$var$submitBtn","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$processPromise","position","delay","delayForAlert","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delayForAlert","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","value","removeAttribute","addEventListener","e","preventDefault","setAttribute"],"version":3,"file":"03-promises.3d665902.js.map"}