{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,eAGZ,MAAMC,EAAYC,SAASC,cAAc,UAEnCC,EAAaF,SAASC,cAAc,kBAEpCE,EAAYH,SAASC,cAAc,iBAEnCG,EAASJ,SAASC,cAAc,mBAEhBI,KAAKC,SAazBP,EAAUQ,iBAAiB,SAAUC,IACnCA,EAAGC,iBACHZ,QAAQC,KAAKI,EAAWQ,MAAQ,KAChCb,QAAQC,IAAIK,EAAUO,OACtBb,QAAQC,IAAIM,EAAOM,OAEfN,EAAOM,MAAQ,GACjBC,YAAW,KACT,IAAIC,EAAiB,EACjBC,GAAeX,EAAWQ,MAC9B,MAAMI,EAAWC,aAAY,MArBrC,WACE,MAAMC,EAAgBX,KAAKC,SAAW,GACtC,OAAO,IAAIW,SAAQ,CAACC,EAASC,KACzBH,EACFE,IAEAC,GAAQ,G,EAiBFC,GACCC,MAAK,KACJC,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBZ,QAAuBC,MAAgB,IAGrFY,OAAM,KACLH,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBd,QAAqBC,MAAgB,IAGlFc,SAAQ,KACHf,KAAoBR,EAAOM,QAC7BkB,cAAcd,GACdjB,QAAQC,IAAI,+BAEdc,GAAkB,EAClBC,IAAgBV,EAAUO,KAAK,GAE/B,IACAP,EAAUO,MAAM,IAClBR,EAAWQ,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('script goes');\nimport Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('button');\n//console.log(submitBtn);\nconst firstDelay = document.querySelector('[name=\"delay\"]');\n//console.log(firstDelay);\nconst delayStep = document.querySelector('[name=\"step\"]');\n//console.log(delayStep);\nconst amount = document.querySelector('[name=\"amount\"]');\n//console.log(amount);\nconst shouldResolve = Math.random() > 0.3;\n\nfunction createPromise() {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  if (shouldResolve) {\n    resolve()\n  } else {\n    reject()\n  }\n})\n}\n\n  submitBtn.addEventListener('click', (ev) => {\n    ev.preventDefault();\n    console.log(+firstDelay.value + 100);\n    console.log(delayStep.value);\n    console.log(amount.value);\n    \n    if (amount.value > 0) {\n      setTimeout(() => { \n        let positionSetter = 1;\n        let delaySetter = +firstDelay.value;\n        const interval = setInterval(() => {\n          \n          createPromise()\n          .then(() => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${positionSetter} in ${delaySetter}ms`);\n            \n          })\n          .catch(() => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${positionSetter} in ${delaySetter}ms`);\n            \n          })\n          .finally(() => {         \n            if (positionSetter === +amount.value) {\n              clearInterval(interval);\n              console.log('All repetitions completed.');\n            }\n            positionSetter += 1;\n            delaySetter += +delayStep.value;\n             \n          });\n        }, +delayStep.value)\n      }, +firstDelay.value)\n    }\n  });"],"names":["$7Y9D8","parcelRequire","console","log","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","Math","random","addEventListener","ev","preventDefault","value","setTimeout","positionSetter","delaySetter","interval","setInterval","shouldResolve1","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","finally","clearInterval"],"version":3,"file":"03-promises.4ee018aa.js.map"}