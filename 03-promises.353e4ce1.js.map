{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,iBAGZ,MAAMC,EAAYC,SAASC,cAAc,UAEnCC,EAAaF,SAASC,cAAc,kBAEpCE,EAAYH,SAASC,cAAc,iBAEnCG,EAASJ,SAASC,cAAc,mBAkBtC,SAASI,EAAeC,EAAUC,EAAOC,IAfzC,SAAuBC,EAAUF,EAAOG,GAGtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUF,E,cAAOG,IAE3BG,EAAO,C,SAAEJ,E,MAAUF,E,cAAOG,GAAe,GAE1CH,EAAM,G,EAKXU,CAAcX,EAAUC,EAAOC,GAC5BU,MAAK,EAACT,SAAEA,EAAQC,cAAEA,MACjBS,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAkB,IAEjFY,OAAM,EAACb,SAAEA,EAAQC,cAAEA,MAClBS,EAAAxB,GAASyB,OAAOG,QAAQ,sBAAoBd,QAAeC,MAAkB,IAE9Ec,SAAQ,KACP,GAAIlB,KAAcF,EAAOqB,MAGvB,OAFA5B,QAAQC,IAAI,mCACZC,EAAU2B,gBAAgB,YAI5BrB,EAAeC,EAAW,EAAGC,GAASJ,EAAUsB,MAAOjB,IAAiBL,EAAUsB,MAAM,G,CAK9FzB,SAASC,cAAc,SAAS0B,iBAAiB,UAAWC,IACxDA,EAAEC,iBAEF9B,EAAU+B,aAAa,WAAY,YAGnCzB,EAAe,GAAIH,EAAWuB,OAAQvB,EAAWuB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('script goemon');\nimport Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('button');\n//console.log(submitBtn);\nconst firstDelay = document.querySelector('[name=\"delay\"]');\n//console.log(firstDelay);\nconst delayStep = document.querySelector('[name=\"step\"]');\n//console.log(delayStep);\nconst amount = document.querySelector('[name=\"amount\"]');\n//console.log(amount);\n\nfunction createPromise(position, delay, delayForAlert) {\n  // Return a promise that resolves or rejects after the specified delay\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay, delayForAlert});\n      } else {\n        reject({ position, delay, delayForAlert});\n      }     \n    }, delay);\n  });\n}\n\nfunction processPromise(position, delay, delayForAlert) {\n  createPromise(position, delay, delayForAlert)\n    .then(({ position, delayForAlert}) => {           \n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayForAlert}ms`);\n    })\n    .catch(({ position, delayForAlert}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayForAlert}ms`);\n    })\n    .finally(() => {\n      if (position === +amount.value) {\n        console.log('All repetitions completed.');\n        submitBtn.removeAttribute('disabled');\n        return;\n      }\n      //Call processPromise func with updated position&delay\n      processPromise(position + 1, delay = +delayStep.value, delayForAlert + +delayStep.value);\n    })\n}\n\n// Add a submit event listener to the form\ndocument.querySelector('.form').addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    \n    submitBtn.setAttribute('disabled', 'disabled');\n\n    //Start process with initial position&delay\n    processPromise(1, +firstDelay.value, +firstDelay.value);\n  });\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","console","log","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$processPromise","position1","delay","delayForAlert1","position","delayForAlert","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","finally","value","removeAttribute","addEventListener","e","preventDefault","setAttribute"],"version":3,"file":"03-promises.353e4ce1.js.map"}